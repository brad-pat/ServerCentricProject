/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package me.cw.main;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import sharesWeb.CompanyDetails;
import sharesWeb.CompanyDetails.SharePrice;

/**
 *
 * @author brad
 */
public class Shares_Page extends javax.swing.JFrame {

    /**
     * Creates new form Shares_Page
     */
    public Shares_Page() {
        initComponents();
        this.setVisible(true);
        this.setTitle("Shares System");
        //SharesPageManager.getInstance().setupPages();
        CurrencyChoice.setSelectedIndex(15);
        generateOpeningPage();
        Left_Buy_Button.setVisible(false); Centre_Buy_Button.setVisible(false); Right_Buy_Button.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jComboBox1 = new javax.swing.JComboBox<>();
        TitleInformation = new javax.swing.JLabel();
        nameSearchBox = new javax.swing.JTextField();
        nameSearchButton = new javax.swing.JButton();
        Left_Company_Name = new javax.swing.JLabel();
        Left_Company_Abb = new javax.swing.JLabel();
        Left_Company_TotalShares_Text = new javax.swing.JLabel();
        Left_Company_TotalShares_Number = new javax.swing.JLabel();
        Left_Company_ShareValue_Text = new javax.swing.JLabel();
        Left_Company_SharesValue_Number = new javax.swing.JLabel();
        Left_Last_Updated_Text = new javax.swing.JLabel();
        Left_Company_Share_Currency = new javax.swing.JLabel();
        Left_Last_Updated_Time = new javax.swing.JLabel();
        Centre_Company_TotalShares_Text = new javax.swing.JLabel();
        Centre_Company_TotalShares_Number = new javax.swing.JLabel();
        Centre_Company_ShareValue_Text = new javax.swing.JLabel();
        Centre_Company_SharesValue_Number = new javax.swing.JLabel();
        Centre_Last_Updated_Text = new javax.swing.JLabel();
        Centre_Company_Share_Currency = new javax.swing.JLabel();
        Centre_Last_Updated_Time = new javax.swing.JLabel();
        Centre_Company_Name = new javax.swing.JLabel();
        Centre_Company_Abb = new javax.swing.JLabel();
        Right_Company_TotalShares_Text = new javax.swing.JLabel();
        Right_Company_TotalShares_Number = new javax.swing.JLabel();
        Right_Company_ShareValue_Text = new javax.swing.JLabel();
        Right_Company_SharesValue_Number = new javax.swing.JLabel();
        Right_Last_Updated_Text = new javax.swing.JLabel();
        Right_Company_Share_Currency = new javax.swing.JLabel();
        Right_Last_Updated_Time = new javax.swing.JLabel();
        Right_Company_Name = new javax.swing.JLabel();
        Right_Company_Abb = new javax.swing.JLabel();
        symbolSearchBox = new javax.swing.JTextField();
        symbolSearchButton = new javax.swing.JButton();
        List_SharePrice_Highest_Button = new javax.swing.JButton();
        List_SharePrice_Lowest_Button = new javax.swing.JButton();
        List_TotalShares_Highest_Button = new javax.swing.JButton();
        List_TotalShares_Lowest_Price = new javax.swing.JButton();
        Previous_Button = new javax.swing.JButton();
        Next_button = new javax.swing.JButton();
        Left_Buy_Button = new javax.swing.JButton();
        Centre_Buy_Button = new javax.swing.JButton();
        Right_Buy_Button = new javax.swing.JButton();
        CurrencyChoice = new javax.swing.JComboBox<>();
        CurrencyText = new javax.swing.JLabel();
        PageNumber = new javax.swing.JLabel();
        ResetButton = new javax.swing.JButton();
        RefreshShareValues = new javax.swing.JButton();
        RefreshExgRatesOnline = new javax.swing.JButton();
        RefreshExgRatesOffline = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TitleInformation.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        TitleInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleInformation.setText("Shares Service - Home");

        nameSearchBox.setText("Name Search");
        nameSearchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSearchBoxActionPerformed(evt);
            }
        });

        nameSearchButton.setText("Search");
        nameSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSearchButtonActionPerformed(evt);
            }
        });

        Left_Company_Name.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Left_Company_Name.setText("Left Company Name");

        Left_Company_Abb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Left_Company_Abb.setText("LeftCA");
        Left_Company_Abb.setToolTipText("");

        Left_Company_TotalShares_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Left_Company_TotalShares_Text.setText("Total Shares:");

        Left_Company_TotalShares_Number.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Left_Company_TotalShares_Number.setText("0");
        Left_Company_TotalShares_Number.setToolTipText("");

        Left_Company_ShareValue_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Left_Company_ShareValue_Text.setText("Share Value:");

        Left_Company_SharesValue_Number.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Left_Company_SharesValue_Number.setText("0");
        Left_Company_SharesValue_Number.setToolTipText("");

        Left_Last_Updated_Text.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Left_Last_Updated_Text.setText("Last Updated:");

        Left_Company_Share_Currency.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Left_Company_Share_Currency.setText("GBP");
        Left_Company_Share_Currency.setToolTipText("");

        Left_Last_Updated_Time.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Left_Last_Updated_Time.setText("01/01/01 at 12:00");

        Centre_Company_TotalShares_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Centre_Company_TotalShares_Text.setText("Total Shares:");

        Centre_Company_TotalShares_Number.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Centre_Company_TotalShares_Number.setText("0");
        Centre_Company_TotalShares_Number.setToolTipText("");

        Centre_Company_ShareValue_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Centre_Company_ShareValue_Text.setText("Share Value:");

        Centre_Company_SharesValue_Number.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Centre_Company_SharesValue_Number.setText("0");
        Centre_Company_SharesValue_Number.setToolTipText("");

        Centre_Last_Updated_Text.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Centre_Last_Updated_Text.setText("Last Updated:");

        Centre_Company_Share_Currency.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Centre_Company_Share_Currency.setText("GBP");
        Centre_Company_Share_Currency.setToolTipText("");

        Centre_Last_Updated_Time.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Centre_Last_Updated_Time.setText("01/01/01 at 12:00");

        Centre_Company_Name.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Centre_Company_Name.setText("Centre Company Name");

        Centre_Company_Abb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Centre_Company_Abb.setText("CentreCA");
        Centre_Company_Abb.setToolTipText("");

        Right_Company_TotalShares_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Right_Company_TotalShares_Text.setText("Total Shares:");

        Right_Company_TotalShares_Number.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Right_Company_TotalShares_Number.setText("0");
        Right_Company_TotalShares_Number.setToolTipText("");

        Right_Company_ShareValue_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Right_Company_ShareValue_Text.setText("Share Value:");

        Right_Company_SharesValue_Number.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Right_Company_SharesValue_Number.setText("0");
        Right_Company_SharesValue_Number.setToolTipText("");

        Right_Last_Updated_Text.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Right_Last_Updated_Text.setText("Last Updated:");

        Right_Company_Share_Currency.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Right_Company_Share_Currency.setText("GBP");
        Right_Company_Share_Currency.setToolTipText("");

        Right_Last_Updated_Time.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Right_Last_Updated_Time.setText("01/01/01 at 12:00");

        Right_Company_Name.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Right_Company_Name.setText("Right Company Name");

        Right_Company_Abb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Right_Company_Abb.setText("RightCA");
        Right_Company_Abb.setToolTipText("");

        symbolSearchBox.setText("Symbol Search");
        symbolSearchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symbolSearchBoxActionPerformed(evt);
            }
        });

        symbolSearchButton.setText("Search");
        symbolSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symbolSearchButtonActionPerformed(evt);
            }
        });

        List_SharePrice_Highest_Button.setText("List By Share Price - Highest");
        List_SharePrice_Highest_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                List_SharePrice_Highest_ButtonActionPerformed(evt);
            }
        });

        List_SharePrice_Lowest_Button.setText("List By Share Price - Lowest");
        List_SharePrice_Lowest_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                List_SharePrice_Lowest_ButtonActionPerformed(evt);
            }
        });

        List_TotalShares_Highest_Button.setText("List By Shares - Highest");
        List_TotalShares_Highest_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                List_TotalShares_Highest_ButtonActionPerformed(evt);
            }
        });

        List_TotalShares_Lowest_Price.setText("List By Shares - Lowest");
        List_TotalShares_Lowest_Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                List_TotalShares_Lowest_PriceActionPerformed(evt);
            }
        });

        Previous_Button.setText("< Previous");
        Previous_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Previous_ButtonActionPerformed(evt);
            }
        });

        Next_button.setText("Next >");
        Next_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next_buttonActionPerformed(evt);
            }
        });

        Left_Buy_Button.setText("Buy Company Shares..");

        Centre_Buy_Button.setText("Buy Company Shares..");

        Right_Buy_Button.setText("Buy Company Shares..");

        CurrencyChoice.setModel(getComboBoxModel());
        CurrencyChoice.setToolTipText("");
        CurrencyChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrencyChoiceActionPerformed(evt);
            }
        });

        CurrencyText.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        CurrencyText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CurrencyText.setText("Show in Currency:");

        PageNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PageNumber.setText("1");

        ResetButton.setText("Reset Search");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        RefreshShareValues.setText("Refresh Share Values");
        RefreshShareValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshShareValuesActionPerformed(evt);
            }
        });

        RefreshExgRatesOnline.setText("Refresh Exchange Rates (Online)");
        RefreshExgRatesOnline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshExgRatesOnlineActionPerformed(evt);
            }
        });

        RefreshExgRatesOffline.setText("Refresh Exchange Rates (Offline)");
        RefreshExgRatesOffline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshExgRatesOfflineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PageNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TitleInformation, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSearchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(symbolSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(symbolSearchButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Left_Company_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Left_Company_Abb, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Left_Company_TotalShares_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Left_Company_TotalShares_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Left_Last_Updated_Text, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(Left_Last_Updated_Time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(Left_Company_SharesValue_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Left_Company_Share_Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(Left_Company_ShareValue_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Centre_Company_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Centre_Company_Abb, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Centre_Company_TotalShares_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Centre_Company_TotalShares_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Centre_Last_Updated_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(Centre_Last_Updated_Time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(Centre_Company_SharesValue_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Centre_Company_Share_Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(Centre_Company_ShareValue_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Right_Company_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Right_Company_Abb, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Right_Company_TotalShares_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Right_Company_TotalShares_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Right_Last_Updated_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(Right_Last_Updated_Time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(Right_Company_SharesValue_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Right_Company_Share_Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(Right_Company_ShareValue_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(RefreshShareValues, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Left_Buy_Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Previous_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(List_SharePrice_Lowest_Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(List_SharePrice_Highest_Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ResetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Centre_Buy_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CurrencyChoice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CurrencyText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RefreshExgRatesOnline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Next_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Right_Buy_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(List_TotalShares_Highest_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(List_TotalShares_Lowest_Price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RefreshExgRatesOffline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameSearchButton)
                            .addComponent(symbolSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(symbolSearchButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(List_SharePrice_Highest_Button)
                            .addComponent(List_TotalShares_Highest_Button)
                            .addComponent(CurrencyText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(List_SharePrice_Lowest_Button)
                            .addComponent(List_TotalShares_Lowest_Price)
                            .addComponent(CurrencyChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Left_Buy_Button)
                            .addComponent(Centre_Buy_Button)
                            .addComponent(Right_Buy_Button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Left_Company_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Left_Company_Abb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Left_Company_TotalShares_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Left_Company_ShareValue_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Left_Company_TotalShares_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Left_Company_SharesValue_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Left_Company_Share_Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Left_Last_Updated_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Left_Last_Updated_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Centre_Company_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Centre_Company_Abb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Centre_Company_TotalShares_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Centre_Company_ShareValue_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Centre_Company_TotalShares_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Centre_Company_SharesValue_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Centre_Company_Share_Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Centre_Last_Updated_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Centre_Last_Updated_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Right_Company_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Right_Company_Abb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Right_Company_TotalShares_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Right_Company_ShareValue_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Right_Company_TotalShares_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Right_Company_SharesValue_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Right_Company_Share_Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Right_Last_Updated_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Right_Last_Updated_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Previous_Button)
                    .addComponent(Next_button)
                    .addComponent(ResetButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RefreshShareValues)
                    .addComponent(RefreshExgRatesOnline)
                    .addComponent(RefreshExgRatesOffline))
                .addGap(218, 218, 218)
                .addComponent(PageNumber)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameSearchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSearchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameSearchBoxActionPerformed

    private void symbolSearchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symbolSearchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_symbolSearchBoxActionPerformed

    private void List_SharePrice_Lowest_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_List_SharePrice_Lowest_ButtonActionPerformed
        ArrayList<CompanyDetails> ordered = CompanyManager.getInstance().orderBySharesLowToHigh();
        companies = ordered;
        generateOpeningPage();
    }//GEN-LAST:event_List_SharePrice_Lowest_ButtonActionPerformed

    private void List_TotalShares_Highest_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_List_TotalShares_Highest_ButtonActionPerformed
        ArrayList<CompanyDetails> ordered = CompanyManager.getInstance().orderBySharesHighToLow();
        companies = ordered;
        generateOpeningPage();
    }//GEN-LAST:event_List_TotalShares_Highest_ButtonActionPerformed

    private void List_TotalShares_Lowest_PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_List_TotalShares_Lowest_PriceActionPerformed
        ArrayList<CompanyDetails> ordered = CompanyManager.getInstance().orderByLowestSharePrices();
        companies = ordered;
        generateOpeningPage();
    }//GEN-LAST:event_List_TotalShares_Lowest_PriceActionPerformed

    private void List_SharePrice_Highest_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_List_SharePrice_Highest_ButtonActionPerformed
        ArrayList<CompanyDetails> ordered = CompanyManager.getInstance().orderByHighestSharePrices();
        companies = ordered;
        generateOpeningPage();
    }//GEN-LAST:event_List_SharePrice_Highest_ButtonActionPerformed

    private void Previous_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Previous_ButtonActionPerformed
        // TODO add your handling code here:
        if(pagenumber != 1)
        generatePreviousPage();
    }//GEN-LAST:event_Previous_ButtonActionPerformed

    private void Next_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next_buttonActionPerformed
        // TODO add your handling code here:
        generateNextPage();
    }//GEN-LAST:event_Next_buttonActionPerformed

    private void nameSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSearchButtonActionPerformed

        String searchitem = nameSearchBox.getText().trim();
        CompanyDetails cd = CompanyManager.getInstance().getCompanyDetailsByName(searchitem);
        if(cd != null)
        {
            show_left(false); show_right(false); Previous_Button.setVisible(false);
            setOneCompanyData(cd);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Error: This company does \nnot exist in this System", "Company not Found.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_nameSearchButtonActionPerformed

    private void symbolSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symbolSearchButtonActionPerformed
        String searchitem = symbolSearchBox.getText().trim().toUpperCase();
        CompanyDetails cd = CompanyManager.getInstance().getCompanyDetailsBySymbol(searchitem);
        if(cd != null)
        {
            show_left(false); show_right(false); Previous_Button.setVisible(false);
            setOneCompanyData(cd); 
            //symbolSearchButton.setText("Clear"); System.out.println("Button Set to clear");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Error: This company does \nnot exist in this System", "Company not Found.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_symbolSearchButtonActionPerformed

    /**
     *      STANDARD - NORMAl WS
     *      ONLINE - ONLINE WS
     *      OFFLINE - OFFLINE WS
     */
    String mode = "STANDARD";
    private void CurrencyChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrencyChoiceActionPerformed
        int index = CurrencyChoice.getSelectedIndex();
        ArrayList<CompanyDetails> converted_list = new ArrayList<>();
        List<String> currencies = getCurrencyCodes();
        String currency = currencies.get(index);
        System.out.println("Selected Currency is: " + currency);
        converted_list.clear();
        for(CompanyDetails cd : companies)
        {
            if(mode.equals("STANDARD"))
            {
                String original_currency = cd.getSharePrice().getShareCurrency();
                String conv_to = currency.split("-")[0].trim();
                //new CurrencyManager(original_currency);
                double original_value = cd.getSharePrice().getShareValue();
                //double conv_rate_hm = CompanyManager.getInstance().conversion_rates.get(conv_to);
                double conv_rate = getConversionRate(original_currency, conv_to);
                double converted = (original_value*conv_rate);
                //System.out.println("Org Val / Cur: " + original_value + original_currency + " CONV TO: " + conv_to + " CONV Ra " + conv_rate_hm + " = " + converted);
                SharePrice sp = cd.getSharePrice();
                sp.setShareCurrency(conv_to); sp.setShareValue(converted);
                cd.setSharePrice(sp);
                converted_list.add(cd);
            }
            if(mode.equals("ONLINE"))
            {
                String original_currency = cd.getSharePrice().getShareCurrency();
                String conv_to = currency.split("-")[0].trim();
                new CurrencyManager(original_currency);
                double original_value = cd.getSharePrice().getShareValue();
                double conv_rate_hm = CompanyManager.getInstance().conversion_rates.get(conv_to);
                //double conv_rate = getConversionRate(original_currency, conv_to);
                double converted = (original_value*conv_rate_hm);
                //System.out.println("Org Val / Cur: " + original_value + original_currency + " CONV TO: " + conv_to + " CONV Ra " + conv_rate_hm + " = " + converted);
                SharePrice sp = cd.getSharePrice();
                sp.setShareCurrency(conv_to); sp.setShareValue(converted);
                cd.setSharePrice(sp);
                converted_list.add(cd);
            }
            if(mode.equals("OFFLINE"))
            {
                String original_currency = cd.getSharePrice().getShareCurrency();
                if(original_currency.equalsIgnoreCase("GBP"))
                {
                    String conv_to = currency.split("-")[0].trim();                
                    double original_value = cd.getSharePrice().getShareValue();
                    double conv_rate_hm = CompanyManager.getInstance().getConvRatesFromAPI(conv_to);
                    //double conv_rate = getConversionRate(original_currency, conv_to);
                    double converted = (original_value*conv_rate_hm);
                    //System.out.println("Org Val / Cur: " + original_value + original_currency + " CONV TO: " + conv_to + " CONV Ra " + conv_rate_hm + " = " + converted);
                    SharePrice sp = cd.getSharePrice();
                    sp.setShareCurrency(conv_to); sp.setShareValue(converted);
                    cd.setSharePrice(sp);
                    converted_list.add(cd);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Warning: Offline mode only \nsupports converting from GBP", "Warning", JOptionPane.WARNING_MESSAGE);
                    companies = CompanyManager.getInstance().company_details;
                    mode = "STANDARD";
                    generateOpeningPage();
                    break;
                }
            }
        }
        companies = converted_list;
        generateOpeningPage();
    }//GEN-LAST:event_CurrencyChoiceActionPerformed
    
    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
        companies = CompanyManager.getInstance().company_details;
        Next_button.setVisible(true); Previous_Button.setVisible(true);
        generateOpeningPage();
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void RefreshShareValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshShareValuesActionPerformed
        // TODO add your handling code here:
        for(CompanyDetails cd : companies)
        {
            CompanyManager.getInstance().updateCompanyDetailsOnlineViaAPI(cd.getSymbol());
        }
        JOptionPane.showMessageDialog(this, "Success: Share Values Updated!", "Success!", JOptionPane.INFORMATION_MESSAGE);
        generateOpeningPage();
    }//GEN-LAST:event_RefreshShareValuesActionPerformed

    private void RefreshExgRatesOnlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshExgRatesOnlineActionPerformed
        mode = "ONLINE";
    }//GEN-LAST:event_RefreshExgRatesOnlineActionPerformed

    private void RefreshExgRatesOfflineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshExgRatesOfflineActionPerformed
        mode = "OFFLINE";
    }//GEN-LAST:event_RefreshExgRatesOfflineActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Shares_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Shares_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Shares_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Shares_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Shares_Page().setVisible(true);
            }
        });
    }
    
    //public ArrayList<Page> pages = SharesPageManager.getInstance().pages;
    public ArrayList<CompanyDetails> companies = CompanyManager.getInstance().company_details;
    int pagenumber = 1;
    
    public void generateOpeningPage()
    {
        pagenumber = 1;
        Next_button.setVisible(true);
        //System.out.println(p.getID() + " - " + p.getComp1ID() + " - " + p.getComp2ID());
        PageNumber.setText(pagenumber + "");
        show_left(true); show_right(true);
        int amount = companies.size();
        if(amount >= 3) setThreeCompanyData(companies.get(0), companies.get(1), companies.get(2));
        if(amount == 2) setTwoCompanyData(companies.get(0), companies.get(1));
        if(amount == 1) setOneCompanyData(companies.get(0));
        if(amount == 0) System.out.println("No data found");
    }
    
    public void generatePreviousPage()
    {
        if(pagenumber >= 1)
        {
            if(pagenumber == 2)
            {
                generateOpeningPage();
            }
            else
            {
                show_left(true); show_right(true);
                Next_button.setVisible(true);
                pagenumber = pagenumber-1;
                PageNumber.setText(pagenumber + "");
                int toremove = pagenumber*3;
                int amount = companies.size()-toremove;
                if(amount >= 3) setThreeCompanyData(companies.get(toremove), companies.get(toremove+1), companies.get(toremove+2));
                if(amount == 2) setTwoCompanyData(companies.get(toremove), companies.get(toremove+1));
                if(amount == 1) setOneCompanyData(companies.get(toremove));
                if(amount <= 0) System.out.println("No data found");    
            }        
        }
        else
        {
            //TODO - Some kind of warning message
        }
    }
    
    public void generateNextPage()
    {
        if(pagenumber >= 1)
        {
            pagenumber++;
            PageNumber.setText(pagenumber + "");
            int toremove = pagenumber*3;
            int amount = companies.size()-toremove;
            if(amount >= 3) setThreeCompanyData(companies.get(toremove), companies.get(toremove+1), companies.get(toremove+2));
            if(amount == 2) setTwoCompanyData(companies.get(toremove), companies.get(toremove+1));
            if(amount == 1) setOneCompanyData(companies.get(toremove));
            if(amount <= 0) Next_button.setVisible(false); //System.out.println("End Reached");
        }
        else
        {
            //TODO - Some kind of warning message
        }
    }
    
    /**
     *  0 = CENTRE
     * @param comp
     */
    public void setOneCompanyData(CompanyDetails comp)
    {
        String name = comp.getName();
        String symbol = comp.getSymbol();
        int shares = comp.getShares();
        SharePrice sp = comp.getSharePrice();
        double price = sp.getShareValue();
        String currency = sp.getShareCurrency();
        String lastupdated;
        if(sp.getShareLastUpdated() != null)
        {
            lastupdated = sp.getShareLastUpdated().toString();
        }
        else
        {
            lastupdated = "Not Found.";
        }
        show_left(false); show_right(false);
        centre_company_details_handler(name, symbol, shares, price, currency, lastupdated);
        Next_button.setVisible(false);
    }
    
    /**
     *  0 = LEFT
     *  1 = RIGHT
     * @param comp
     * @param comp2
     */
    public void setTwoCompanyData(CompanyDetails comp, CompanyDetails comp2)
    {
        String name = comp.getName();
        String symbol = comp.getSymbol();
        int shares = comp.getShares();
        SharePrice sp = comp.getSharePrice();
        double price = sp.getShareValue();
        String currency = sp.getShareCurrency();
        String lastupdated;
        if(sp.getShareLastUpdated() != null)
        {
            lastupdated = sp.getShareLastUpdated().toString();
        }
        else
        {
            lastupdated = "Not Found.";
        }
        left_company_details_handler(name, symbol, shares, price, currency, lastupdated);  
        
        String name2 = comp2.getName();
        String symbol2 = comp2.getSymbol();
        int shares2 = comp2.getShares();
        SharePrice sp2 = comp2.getSharePrice();
        double price2 = sp2.getShareValue();
        String currency2 = sp2.getShareCurrency();
        String lastupdated2;
        if(sp2.getShareLastUpdated() != null)
        {
            lastupdated2 = sp2.getShareLastUpdated().toString();
        }
        else
        {
            lastupdated2 = "Not Found.";
        }
        right_company_details_handler(name2, symbol2, shares2, price2, currency2, lastupdated2);
        Next_button.setVisible(false);
    }
    
    /**
     * 0 = LEFT
     * 1 = CENTRE
     * 2 = RIGHT
     * @param comp
     * @param comp1
     * @param comp2
     */
    public void setThreeCompanyData(CompanyDetails comp, CompanyDetails comp1, CompanyDetails comp2)
    {
        String name = comp.getName();
        String symbol = comp.getSymbol();
        int shares = comp.getShares();
        SharePrice sp = comp.getSharePrice();
        double price = sp.getShareValue();
        String currency = sp.getShareCurrency();
        String lastupdated;
        if(sp.getShareLastUpdated() != null)
        {
            lastupdated = sp.getShareLastUpdated().toString();
        }
        else
        {
            lastupdated = "Not Found.";
        }
        left_company_details_handler(name, symbol, shares, price, currency, lastupdated);
        
        String name1 = comp1.getName();
        String symbol1 = comp1.getSymbol();
        int shares1 = comp1.getShares();
        SharePrice sp1 = comp1.getSharePrice();
        double price1 = sp1.getShareValue();
        String currency1 = sp1.getShareCurrency();
        String lastupdated1;
        if(sp1.getShareLastUpdated() != null)
        {
            lastupdated1 = sp1.getShareLastUpdated().toString();
        }
        else
        {
            lastupdated1 = "Not Found.";
        }
        centre_company_details_handler(name1, symbol1, shares1, price1, currency1, lastupdated1);     
        
        String name2 = comp2.getName();
        String symbol2 = comp2.getSymbol();
        int shares2 = comp2.getShares();
        SharePrice sp2 = comp2.getSharePrice();
        double price2 = sp2.getShareValue();
        String currency2 = sp2.getShareCurrency();
        String lastupdated2;
        if(sp2.getShareLastUpdated() != null)
        {
            lastupdated2 = sp2.getShareLastUpdated().toString();
        }
        else
        {
            lastupdated2 = "Not Found.";
        }
        right_company_details_handler(name2, symbol2, shares2, price2, currency2, lastupdated2);
    }
    
    public void show_left(boolean show)
    {
        if(show == false)
        {
            //Left_Buy_Button.setVisible(false);
            Left_Company_Abb.setText("");
            Left_Company_Name.setText("");
            Left_Company_ShareValue_Text.setText("");
            Left_Company_Share_Currency.setText("");
            Left_Company_SharesValue_Number.setText("");
            Left_Company_TotalShares_Number.setText("");
            Left_Company_TotalShares_Text.setText("");
            Left_Last_Updated_Text.setText("");
            Left_Last_Updated_Time.setText("");
        }
        else
        {
            //Left_Buy_Button.setVisible(true);
            Left_Company_Abb.setText("");
            Left_Company_Name.setText("");
            Left_Company_ShareValue_Text.setText("Share Value:");
            Left_Company_Share_Currency.setText("");
            Left_Company_SharesValue_Number.setText("");
            Left_Company_TotalShares_Number.setText("");
            Left_Company_TotalShares_Text.setText("Total Shares:");
            Left_Last_Updated_Text.setText("Last Updated:");
            Left_Last_Updated_Time.setText("");
        }
    }
    
    public void show_centre(boolean show)
    {
        if(show == false)
        {
            //Centre_Buy_Button.setVisible(false);
            Centre_Company_Abb.setText("");
            Centre_Company_Name.setText("");
            Centre_Company_ShareValue_Text.setText("");
            Centre_Company_Share_Currency.setText("");
            Centre_Company_SharesValue_Number.setText("");
            Centre_Company_TotalShares_Number.setText("");
            Centre_Company_TotalShares_Text.setText("");
            Centre_Last_Updated_Text.setText("");
            Centre_Last_Updated_Time.setText("");
        }
        else
        {
            //Centre_Buy_Button.setVisible(true);
            Centre_Company_Abb.setText("");
            Centre_Company_Name.setText("");
            Centre_Company_ShareValue_Text.setText("Share Value:");
            Centre_Company_Share_Currency.setText("");
            Centre_Company_SharesValue_Number.setText("");
            Centre_Company_TotalShares_Number.setText("");
            Centre_Company_TotalShares_Text.setText("Total Shares:");
            Centre_Last_Updated_Text.setText("Last Updated:");
            Centre_Last_Updated_Time.setText("");
        }
    }
    
    public void show_right(boolean show)
    {
        if(show == false)
        {
            //Right_Buy_Button.setVisible(false);
            Right_Company_Abb.setText("");
            Right_Company_Name.setText("");
            Right_Company_ShareValue_Text.setText("");
            Right_Company_Share_Currency.setText("");
            Right_Company_SharesValue_Number.setText("");
            Right_Company_TotalShares_Number.setText("");
            Right_Company_TotalShares_Text.setText("");
            Right_Last_Updated_Text.setText("");
            Right_Last_Updated_Time.setText("");
        }
        else
        {
            //Right_Buy_Button.setVisible(true);
            Right_Company_Abb.setText("");
            Right_Company_Name.setText("");
            Right_Company_ShareValue_Text.setText("Share Value:");
            Right_Company_Share_Currency.setText("");
            Right_Company_SharesValue_Number.setText("");
            Right_Company_TotalShares_Number.setText("");
            Right_Company_TotalShares_Text.setText("Total Shares:");
            Right_Last_Updated_Text.setText("Last Updated:");
            Right_Last_Updated_Time.setText("");
        }
    }
    
    public void show_bottom_buttons(boolean show)
    {
        //End_Button.setVisible(show);
        Next_button.setVisible(show);
        Previous_Button.setVisible(show);
    }
    
    public void show_all(boolean show)
    {
        show_left(show); show_right(show); show_centre(show); show_bottom_buttons(show);
    }
    
    private ComboBoxModel getComboBoxModel()
    {
        List<String> curren = getCurrencyCodes();
        String[] items = curren.toArray(new String[0]);
        return new DefaultComboBoxModel(items);
    }
    
    //Date String Format - DD/MM/YYYY%HH:MM
    public void left_company_details_handler(String name, String abb, int shares, double value, String currency, String date)
    {
        Left_Company_Abb.setText(abb);
        Left_Company_Name.setText(name);
        Left_Company_Share_Currency.setText(currency.toUpperCase());
        DecimalFormat format = new DecimalFormat("#0.00");
        Left_Company_SharesValue_Number.setText("" + format.format(value));
        Left_Company_TotalShares_Number.setText("" + shares);
        Left_Last_Updated_Time.setText(date);
    }
    
    public void centre_company_details_handler(String name, String abb, int shares, double value, String currency, String date)
    {
        Centre_Company_Abb.setText(abb);
        Centre_Company_Name.setText(name);
        Centre_Company_Share_Currency.setText(currency.toUpperCase());
        DecimalFormat format = new DecimalFormat("#0.00");
        Centre_Company_SharesValue_Number.setText("" + format.format(value));
        Centre_Company_TotalShares_Number.setText("" + shares);
        Centre_Last_Updated_Time.setText(date);
    }
    
    public void right_company_details_handler(String name, String abb, int shares, double value, String currency, String date)
    {
        Right_Company_Abb.setText(abb);
        Right_Company_Name.setText(name);
        Right_Company_Share_Currency.setText(currency.toUpperCase());
        DecimalFormat format = new DecimalFormat("#0.00");
        Right_Company_SharesValue_Number.setText("" + format.format(value));
        Right_Company_TotalShares_Number.setText("" + shares);
        Right_Last_Updated_Time.setText(date);       
    }
    
    public void currency_box_options()
    {
        //TODO - Setup Currency Box
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Centre_Buy_Button;
    private javax.swing.JLabel Centre_Company_Abb;
    private javax.swing.JLabel Centre_Company_Name;
    private javax.swing.JLabel Centre_Company_ShareValue_Text;
    private javax.swing.JLabel Centre_Company_Share_Currency;
    private javax.swing.JLabel Centre_Company_SharesValue_Number;
    private javax.swing.JLabel Centre_Company_TotalShares_Number;
    private javax.swing.JLabel Centre_Company_TotalShares_Text;
    private javax.swing.JLabel Centre_Last_Updated_Text;
    private javax.swing.JLabel Centre_Last_Updated_Time;
    private javax.swing.JComboBox<String> CurrencyChoice;
    private javax.swing.JLabel CurrencyText;
    private javax.swing.JButton Left_Buy_Button;
    private javax.swing.JLabel Left_Company_Abb;
    private javax.swing.JLabel Left_Company_Name;
    private javax.swing.JLabel Left_Company_ShareValue_Text;
    private javax.swing.JLabel Left_Company_Share_Currency;
    private javax.swing.JLabel Left_Company_SharesValue_Number;
    private javax.swing.JLabel Left_Company_TotalShares_Number;
    private javax.swing.JLabel Left_Company_TotalShares_Text;
    private javax.swing.JLabel Left_Last_Updated_Text;
    private javax.swing.JLabel Left_Last_Updated_Time;
    private javax.swing.JButton List_SharePrice_Highest_Button;
    private javax.swing.JButton List_SharePrice_Lowest_Button;
    private javax.swing.JButton List_TotalShares_Highest_Button;
    private javax.swing.JButton List_TotalShares_Lowest_Price;
    private javax.swing.JButton Next_button;
    private javax.swing.JLabel PageNumber;
    private javax.swing.JButton Previous_Button;
    private javax.swing.JButton RefreshExgRatesOffline;
    private javax.swing.JButton RefreshExgRatesOnline;
    private javax.swing.JButton RefreshShareValues;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton Right_Buy_Button;
    private javax.swing.JLabel Right_Company_Abb;
    private javax.swing.JLabel Right_Company_Name;
    private javax.swing.JLabel Right_Company_ShareValue_Text;
    private javax.swing.JLabel Right_Company_Share_Currency;
    private javax.swing.JLabel Right_Company_SharesValue_Number;
    private javax.swing.JLabel Right_Company_TotalShares_Number;
    private javax.swing.JLabel Right_Company_TotalShares_Text;
    private javax.swing.JLabel Right_Last_Updated_Text;
    private javax.swing.JLabel Right_Last_Updated_Time;
    private javax.swing.JLabel TitleInformation;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JTextField nameSearchBox;
    private javax.swing.JButton nameSearchButton;
    private javax.swing.JTextField symbolSearchBox;
    private javax.swing.JButton symbolSearchButton;
    // End of variables declaration//GEN-END:variables

    private static java.util.List<java.lang.String> getCurrencyCodes() {
        docwebservices.CurrencyConversionWSService service = new docwebservices.CurrencyConversionWSService();
        docwebservices.CurrencyConversionWS port = service.getCurrencyConversionWSPort();
        return port.getCurrencyCodes();
    }

    private static double getConversionRate(java.lang.String arg0, java.lang.String arg1) {
        docwebservices.CurrencyConversionWSService service = new docwebservices.CurrencyConversionWSService();
        docwebservices.CurrencyConversionWS port = service.getCurrencyConversionWSPort();
        return port.getConversionRate(arg0, arg1);
    }
}
